Index: src/main/java/main/doanjava2/graphCanvas/GraphImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.doanjava2.graphCanvas;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.math.MathContext;\r\nimport java.util.List;\r\n\r\nimport com.udojava.evalex.Expression;\r\n\r\nimport ch.obermuhlner.math.big.BigDecimalMath;\r\n\r\nimport javafx.scene.canvas.Canvas;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.layout.Region;\r\nimport javafx.scene.paint.Color;\r\nimport main.doanjava2.GraphData;\r\nimport main.doanjava2.MainController;\r\n\r\nclass GraphImage_Params{\r\n\tstatic double plottingSpaceOnScreen = 10;\r\n\tstatic int loopLimit = 5;\r\n\tstatic int maxRecursion = 5;\r\n\tstatic double angleThreshold = 20;//in degree\r\n}\r\npublic class GraphImage {\r\n\tSetting settingRef;\r\n\tGraphData dataRef;\r\n\tCanvas canvas;\r\n\tprivate GraphicsContext gc;\r\n\tpublic void setManagerRef(MainController ref) {\r\n\t\tmnr = ref;\r\n\t}\r\n\tMainController mnr;\r\n\tpublic GraphImage(Setting settingRef, GraphData dataRef) {\r\n\t\tthis.settingRef = settingRef;\r\n\t\tthis.dataRef = dataRef;\r\n\t\t\r\n\t\tdataRef.addListener(ob -> update());\r\n\t\tcanvas = new Canvas();\r\n\t\tgc = canvas.getGraphicsContext2D();\r\n\t}\r\n\tpublic void update() {\r\n\t\tclear();\r\n\t\tdrawGraph();\r\n\t\tcanvas.toFront();\r\n\t}\r\n\tpublic void hide() {\r\n\t\tcanvas.setVisible(true);\r\n\t}\r\n\tpublic void show() {\r\n\t\tcanvas.setVisible(false);\r\n\t}\r\n\tpublic void setZIndex(int zIndex) {\r\n\t\tcanvas.setViewOrder(zIndex);\r\n\t}\r\n\tpublic void rescaleUI(double width, double height) {\r\n\t\tRegion par = (Region) canvas.getParent();\r\n\t\tcanvas.setWidth( par.getWidth());\r\n\t\tcanvas.setHeight( par.getHeight());\r\n\t\tclear();\r\n\t\tupdate();\r\n\t}\r\n\tpublic void clear() {\r\n\t\tgc.clearRect(0, 0, canvas.getWidth(), canvas.getHeight());\r\n\t}\r\n\t\r\n\tenum PointState{\r\n\t\tInside,\r\n\t\tOutside,\r\n\t\tMinusInfinity,\r\n\t\tPlusInfinity,\r\n\t\tUndetermined\r\n\t}\r\n\tprivate class PointInfo{\r\n\t\tprivate double input, yValue;\r\n\t\tprivate double onScreenX, onScreenY;\r\n\t\tprivate PointState state;\r\n\t\tpublic PointInfo(double pointValueX, Expression expression) {\r\n\t\t\texpression.setVariable(\"x\", Double.toString(pointValueX));\r\n\t\t\ttry {\r\n\t\t\t\tsetInput(pointValueX);\r\n\t\t\t\tBigDecimal r = expression.eval();\r\n\t\t\t\tdouble pointValueY = r.doubleValue();\r\n\t\t\t\tyValue = pointValueY;\r\n\t\t\t\t\r\n\t\t\t\tonScreenX = getOnCanvasCoordinateX(pointValueX);\r\n\t\t\t\tonScreenY = getOnCanvasCoordinateY(pointValueY);\r\n\t\t\t\t\r\n\t\t\t\t//handling state\r\n\t\t\t\tif(pointValueY>settingRef.botBoundary.get()&&pointValueY<settingRef.topBoundary.get()) {\r\n\t\t\t\t\tstate = PointState.Inside;\r\n\t\t\t\t}\r\n\t\t\t\telse if(pointValueY>settingRef.topBoundary.get()*5) {\r\n\t\t\t\t\tstate = PointState.PlusInfinity;\r\n\t\t\t\t}\r\n\t\t\t\telse if(pointValueY<settingRef.botBoundary.get()*5) {\r\n\t\t\t\t\tstate = PointState.MinusInfinity;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstate = PointState.Outside;\r\n\t\t\t\t}\t\t\r\n\t\t\t}\r\n\t\t\tcatch(Exception e) {\r\n\t\t\t\tstate = PointState.Undetermined;\r\n\t\t\t\t//System.out.println(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tpublic double getOnScreenX() {\r\n\t\t\treturn onScreenX;\r\n\t\t}\r\n\t\tpublic double getOnScreenY() {\r\n\t\t\treturn onScreenY;\r\n\t\t}\r\n\t\tpublic PointState getState() {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t\tpublic double getInput() {\r\n\t\t\treturn input;\r\n\t\t}\r\n\t\tpublic double getOutput() {\r\n\t\t\treturn yValue;\t\r\n\t\t}\r\n\t\tpublic void setInput(double input) {\r\n\t\t\tthis.input = input;\r\n\t\t}\r\n\t}\r\n\tprivate void drawGraph() {\r\n\t\tif(dataRef.getExpressionString().equals(\"\")) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tString replacedExpression = mnr.handleReplaceExpressions(dataRef);\r\n\t\tSystem.out.println(\"check..........:     \" +replacedExpression);\r\n\r\n\t\tdouble plottingSpace = GraphImage_Params.plottingSpaceOnScreen/canvas.getWidth() * settingRef.getBoundaryWidth();\r\n\t\tdouble currentX = settingRef.leftBoundary.get();\r\n\t\tdouble endX = settingRef.rightBoundary.get()+plottingSpace;\r\n\t\tdouble preX = currentX-plottingSpace/2;\r\n\t\t\t\r\n\t\tExpression expression = new Expression(replacedExpression);\r\n\t\texpression.addFunction(expression.new Function(\"sin\", 3) {\r\n\t\t\t@Override\r\n\t\t\tpublic BigDecimal eval(List<BigDecimal> parameters) {\r\n\t\t\t\tBigDecimal result = BigDecimalMath.sin(parameters.get(0), MathContext.DECIMAL32);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t});\t\r\n\t\texpression.addFunction(expression.new Function(\"sin\", 3) {\r\n\t\t\t@Override\r\n\t\t\tpublic BigDecimal eval(List<BigDecimal> parameters) {\r\n\t\t\t\tBigDecimal result = BigDecimalMath.cos(parameters.get(0), MathContext.DECIMAL32);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t});\t\r\n\t\texpression.addFunction(expression.new Function(\"tan\", 3) {\r\n\t\t\t@Override\r\n\t\t\tpublic BigDecimal eval(List<BigDecimal> parameters) {\r\n\t\t\t\tBigDecimal result = BigDecimalMath.tan(parameters.get(0), MathContext.DECIMAL32);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t});\r\n\t\texpression.addFunction(expression.new Function(\"log\", 3) {\r\n\t\t\t@Override\r\n\t\t\tpublic BigDecimal eval(List<BigDecimal> parameters) {\r\n\t\t\t\tif(parameters.get(0).doubleValue()<1e-10) {\r\n\t\t\t\t\treturn new BigDecimal(-1e+9);\r\n\t\t\t\t}\r\n\t\t\t\tBigDecimal result = BigDecimalMath.log(parameters.get(0), MathContext.DECIMAL32);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t});\r\n\t\t//System.out.println(\"Result: \" + result);  \r\n\t\r\n\t\tPointInfo prePointInfo = new PointInfo(preX,expression);\r\n\t\tPointInfo curPointInfo = prePointInfo;\r\n\t\t\r\n\t\twhile(currentX<endX) {\t\t\t\t\r\n\t\t\tgc.setLineWidth(dataRef.getLineWidth());\r\n\t\t\tgc.setGlobalAlpha(dataRef.getOpacity());\r\n\t\t\tgc.setStroke(dataRef.getGraphColor());\r\n\t\t\t\r\n\t\t\tcurPointInfo = new PointInfo(currentX,expression);\t\r\n\t\t\tcurrentX+=plottingSpace;\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t//check state\r\n\t\t\tPointState preState = prePointInfo.getState();\r\n\t\t\tPointState curState = curPointInfo.getState();\r\n\t\t\t//System.out.println(curState.toString());\r\n\t\t\tif(preState.equals(PointState.Inside)&&curState.equals(PointState.Inside)\r\n\t\t\t || (preState.equals(PointState.Outside)&&curState.equals(PointState.Inside))\r\n\t\t\t || (preState.equals(PointState.Inside)&&curState.equals(PointState.Outside))) \r\n\t\t\t{\r\n\t\t\t\tprePointInfo = inspectFurther(prePointInfo, curPointInfo, 0, expression);\r\n\t\t\t\t/*\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), prePointInfo.getOnScreenY(),\r\n\t\t\t\t\t\t\t  curPointInfo.getOnScreenX(),curPointInfo.getOnScreenY());\r\n\t\t\t\t*/\r\n\t\t\t\t/*\r\n\t\t\t\tgc.setStroke(Color.BLUE);\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), 0,\r\n\t\t\t\t\t\tprePointInfo.getOnScreenX(),canvas.getHeight());\r\n\t\t\t\tgc.setStroke(Color.GREEN);\r\n\t\t\t\tgc.strokeLine(curPointInfo.getOnScreenX(), 0,\r\n\t\t\t\t\t\tcurPointInfo.getOnScreenX(),canvas.getHeight());\r\n\t\t\t\t*/\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tgc.setStroke(Color.ORANGE);\r\n\t\t\tif(preState.equals(PointState.Undetermined)&&curState.equals(PointState.Inside)) {\r\n\t\t\t\tapproximateUndeterminedPoint(curPointInfo, prePointInfo, expression);\r\n\t\t\t}\r\n\t\t\tif(preState.equals(PointState.Inside)&&curState.equals(PointState.Undetermined)) {\r\n\t\t\t\tapproximateUndeterminedPoint(prePointInfo, curPointInfo, expression);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(preState.equals(PointState.MinusInfinity)&&curState.equals(PointState.Inside)) {\r\n\t\t\t\tgc.strokeLine(curPointInfo.getOnScreenX(), curPointInfo.getOnScreenY(),\r\n\t\t\t\t\t\t\t  curPointInfo.getOnScreenX(),canvas.getHeight());\r\n\t\t\t}\r\n\t\t\tif(preState.equals(PointState.Inside)&&curState.equals(PointState.MinusInfinity)) {\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), prePointInfo.getOnScreenY(),\r\n\t\t\t\t\t\t\t  prePointInfo.getOnScreenX(),canvas.getHeight());\r\n\t\t\t}\r\n\t\t\tif(preState.equals(PointState.PlusInfinity)&&curState.equals(PointState.Inside)) {\r\n\t\t\t\tgc.strokeLine(curPointInfo.getOnScreenX(), curPointInfo.getOnScreenY(),\r\n\t\t\t\t\t\t\t  curPointInfo.getOnScreenX(),0);\r\n\t\t\t}\r\n\t\t\tif(preState.equals(PointState.Inside)&&curState.equals(PointState.PlusInfinity)) {\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), prePointInfo.getOnScreenY(),\r\n\t\t\t\t\t\t\t  prePointInfo.getOnScreenX(),0);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tprePointInfo = curPointInfo;\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate PointInfo inspectFurther(PointInfo left, PointInfo right, int currentRecursion, Expression e) {\r\n\t\tPointInfo middle = new PointInfo((left.getInput()+right.getInput())/2, e);\r\n\t\tdouble dLeft = (middle.getOutput()-left.getOutput())/(middle.getInput()-left.getInput());\r\n\t\tdouble aLeft = Math.atan(dLeft);\r\n\t\tdouble dRight = (right.getOutput()-middle.getOutput())/(right.getInput()-middle.getInput());\r\n\t\tdouble aRight = Math.atan(dRight);\r\n\t\tdouble angleInDegree = (Math.abs(aLeft-aRight))*180/Math.PI;\r\n\t\tif(angleInDegree<GraphImage_Params.angleThreshold||currentRecursion==GraphImage_Params.maxRecursion) {\r\n\t\t\t//System.out.printf(\"left: %f, right: %f, angle: %f\\n\",dLeft,dRight,angleInDegree);\r\n\t\t\tif(left.getState().equals(PointState.Inside)&&middle.getState().equals(PointState.Inside)\r\n\t\t\t\t\t || (left.getState().equals(PointState.Outside)&&middle.getState().equals(PointState.Inside))\r\n\t\t\t\t\t || (left.getState().equals(PointState.Inside)&&middle.getState().equals(PointState.Outside))) \r\n\t\t\t{\r\n\t\t\t\tgc.strokeLine(left.getOnScreenX(), left.getOnScreenY(), middle.getOnScreenX(), middle.getOnScreenY());\r\n\t\t\t}else {\r\n\t\t\t\t//System.out.println(\"hello\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn middle;\r\n\t\t\t\r\n\t\t}else {\r\n\t\t\tgc.setStroke(Color.rgb(230, 33, 0));\r\n\t\t\tif(currentRecursion==0) {\r\n\t\t\t\tgc.setStroke(Color.GREEN);\r\n\t\t\t}\r\n\t\t\telse if(currentRecursion==1) {\r\n\t\t\t\tgc.setStroke(Color.BLUE);\r\n\t\t\t}\r\n\t\t\telse if(currentRecursion==2) {\r\n\t\t\t\tgc.setStroke(Color.ORANGE);\r\n\t\t\t}\r\n\t\t\telse if(currentRecursion==3) {\r\n\t\t\t\tgc.setStroke(Color.RED);\r\n\t\t\t}\r\n\r\n\t\t\tdouble xMiddleLeft = (left.getInput()+middle.getInput())/2;\r\n\t\t\tdouble xMiddleRight = (right.getInput()+middle.getInput())/2;\r\n\t\t\tPointInfo pMiddleLeft = new PointInfo(xMiddleLeft, e);\r\n\t\t\tPointInfo pMiddleRight = new PointInfo(xMiddleRight, e);\r\n\t\t\t\r\n\t\t\tpMiddleLeft = inspectFurther(left, middle,currentRecursion+1,e);\r\n\t\t\tmiddle = inspectFurther(pMiddleLeft, pMiddleRight,currentRecursion+1,e);\r\n\t\t\tpMiddleRight = inspectFurther(middle, right,currentRecursion+1,e);\r\n\t\t\t\r\n\t\t\treturn pMiddleRight;\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate void approximateUndeterminedPoint(PointInfo nearPoint, PointInfo underterminedPoint, Expression e) {\r\n\t\tif(nearPoint.getInput()>underterminedPoint.getInput()) {\r\n\t\t\tapproximateUndeterminedPointLeft(nearPoint, underterminedPoint, e);\r\n\t\t}else {\r\n\t\t\tapproximateUndeterminedPointRight(nearPoint, underterminedPoint, e);\r\n\t\t}\r\n\t}\r\n\tprivate void approximateUndeterminedPointLeft(PointInfo nearPoint, PointInfo underterminedPoint, Expression e) {\r\n\t\tdouble left = underterminedPoint.getInput(), right = nearPoint.getInput();\r\n\t\tdouble currentApproximation = (left+right)/2;\r\n\t\tPointInfo prePointInfo = nearPoint;\r\n\t\tfor(int i = 0;i<GraphImage_Params.loopLimit;i++) {\r\n\t\t\tPointInfo curPointInfo = new PointInfo(currentApproximation, e);\r\n\t\t\tPointState state = curPointInfo.getState();\r\n\t\t\tif(state.equals(PointState.Inside)) {\r\n\t\t\t\tright = currentApproximation;\r\n\t\t\t\tcurrentApproximation = (left+right)/2;\t\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), prePointInfo.getOnScreenY(), \r\n\t\t\t\t\t\tcurPointInfo.getOnScreenX(), curPointInfo.getOnScreenY());\r\n\t\t\t}\r\n\t\t\telse if(state.equals(PointState.Undetermined)) {\r\n\t\t\t\tleft = currentApproximation;\r\n\t\t\t\tcurrentApproximation = (left+right)/2;\t\t\t\t\r\n\t\t\t}\r\n\t\t\telse if(state.equals(PointState.MinusInfinity)) {\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), prePointInfo.getOnScreenY(), \r\n\t\t\t\t\t\tprePointInfo.getOnScreenX(), canvas.getHeight());\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\telse if(state.equals(PointState.MinusInfinity)) {\r\n\t\t\t\tgc.strokeLine(prePointInfo.getOnScreenX(), prePointInfo.getOnScreenY(), \r\n\t\t\t\t\t\tprePointInfo.getOnScreenX(), 0);\t\t\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//System.out.printf(\"Left: %.20f, Right: %.20f, Middle: %.20f\\n\", left,right,currentApproximation);\r\n\t\t}\r\n\t\t//System.out.println(\"\\n\\n\");\r\n\t}\r\n\tprivate void approximateUndeterminedPointRight(PointInfo nearPoint, PointInfo underterminedPoint, Expression e) {\r\n\t\tapproximateUndeterminedPointLeft(nearPoint, underterminedPoint, e);\r\n\t}\r\n\t\r\n\tprivate double getOnCanvasCoordinateX(double point) {\r\n\t\tdouble dstX = point - settingRef.leftBoundary.get();\r\n\t\tdouble ratio = dstX/settingRef.getBoundaryWidth();\r\n\t\tdouble onScreen = ratio*canvas.getWidth();\r\n\t\treturn onScreen;\r\n\t}\r\n\tprivate double getOnCanvasCoordinateY(double point) {\r\n\t\tdouble dstY = settingRef.topBoundary.get() - point;\r\n\t\tdouble ratio = dstY/settingRef.getBoundaryHeight();\r\n\t\tdouble onScreen = ratio*canvas.getHeight();\r\n\t\treturn onScreen;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/main/doanjava2/graphCanvas/GraphImage.java b/src/main/java/main/doanjava2/graphCanvas/GraphImage.java
--- a/src/main/java/main/doanjava2/graphCanvas/GraphImage.java	(revision 843ca3db510f6747c57e19f1080c5e2fc1fbb828)
+++ b/src/main/java/main/doanjava2/graphCanvas/GraphImage.java	(date 1717420456229)
@@ -124,7 +124,7 @@
 			this.input = input;
 		}
 	}
-	private void drawGraph() {
+		private void drawGraph() {
 		if(dataRef.getExpressionString().equals("")) {
 			return;
 		}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7c0c8e8f-6c6a-46f7-8269-c472333fba20\" name=\"Changes\" comment=\"fix\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/recentFiles.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/recentFiles.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/main/doanjava2/MainController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/main/doanjava2/MainController.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;thinhleduc387&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Boygioi15/DoAnJava2.git&quot;,\r\n    &quot;accountId&quot;: &quot;efc580e4-ca15-41ef-ae3c-024046440c6f&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2gXl1a74FGJw4FV3SAuMc2TPEX1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;handle-expression&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/pc/Desktop/Hoàng Gia Phong-22521084/Hoàng Gia Phong-22521084/src&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\Dialog\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\TopNavBar\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\InputKeyboard\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\GraphCanvas\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\fxml\\TopNavBar\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\fxml\\FilePanel\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\fxml\\GraphList\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"main.doanjava2.filePanel\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.doanjava2.Main\" />\r\n      <module name=\"DoAnJava2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"main.doanjava2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7c0c8e8f-6c6a-46f7-8269-c472333fba20\" name=\"Changes\" comment=\"\" />\r\n      <created>1715851590364</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715851590364</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"finish\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716889896553</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716889896553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix remove empty graphData\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716890202251</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716890202251</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716899596345</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716899596345</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"finish\" />\r\n    <MESSAGE value=\"fix remove empty graphData\" />\r\n    <MESSAGE value=\"fix\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 843ca3db510f6747c57e19f1080c5e2fc1fbb828)
+++ b/.idea/workspace.xml	(date 1717420493301)
@@ -8,6 +8,8 @@
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/recentFiles.txt" beforeDir="false" afterPath="$PROJECT_DIR$/recentFiles.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/main/doanjava2/MainController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/main/doanjava2/MainController.java" afterDir="false" />
+    <list default="true" id="7c0c8e8f-6c6a-46f7-8269-c472333fba20" name="Changes" comment="finish welcome-screen">
+      <change beforePath="$PROJECT_DIR$/src/main/java/main/doanjava2/graphCanvas/GraphImage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/main/doanjava2/graphCanvas/GraphImage.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -23,10 +25,13 @@
       </list>
     </option>
   </component>
+  <component name="Git.Merge.Settings">
+    <option name="BRANCH" value="handle-expression" />
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="handle-expression" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -40,7 +45,7 @@
   <component name="GithubPullRequestsUISettings">{
   &quot;selectedUrlAndAccountId&quot;: {
     &quot;url&quot;: &quot;https://github.com/Boygioi15/DoAnJava2.git&quot;,
-    &quot;accountId&quot;: &quot;efc580e4-ca15-41ef-ae3c-024046440c6f&quot;
+    &quot;accountId&quot;: &quot;eccbd3a9-89bc-4e46-8b5d-46937a7c02be&quot;
   }
 }</component>
   <component name="MavenImportPreferences">
