Index: src/main/java/main/doanjava2/graphList/GraphExpression.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main.doanjava2.graphList;\r\n\r\nimport com.udojava.evalex.Expression;\r\nimport main.doanjava2.GraphData;\r\nimport main.doanjava2.MainController;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.*;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class GraphExpression {\r\n    private Map<String, String> functionMap = new HashMap<>();\r\n    private String[] expressionName = {\"f\", \"g\", \"k\", \"t\", \"q\", \"s\"};\r\n    private int indexExtra = 1;\r\n    private int number = 0;\r\n    MainController mnr;\r\n    private Set<String> defaultFunctions;\r\n\r\n    public void setManagerRef(MainController ref) {\r\n        mnr = ref;\r\n    }\r\n\r\n    public GraphExpression() {\r\n        initializeFunctionMap();\r\n    }\r\n\r\n    private void initializeFunctionMap() {\r\n        for (String functionName : expressionName) {\r\n            functionMap.put(functionName + \"(x)\", \"\");\r\n        }\r\n        this.defaultFunctions = new HashSet<>();\r\n        this.defaultFunctions.add(\"sqrt\");\r\n        this.defaultFunctions.add(\"cos\");\r\n        this.defaultFunctions.add(\"sin\");\r\n        this.defaultFunctions.add(\"log\");\r\n        this.defaultFunctions.add(\"sinh\");\r\n        this.defaultFunctions.add(\"abs\");\r\n\r\n    }\r\n\r\n    public void defineFunction(String key, String expression) {\r\n        String emptyKey = getKeyWithEmptyValue();\r\n        if (emptyKey != null) {\r\n            functionMap.put(emptyKey, expression);\r\n        } else {\r\n            System.out.println(\"Maximum number of functions reached.\");\r\n        }\r\n    }\r\n\r\n    public String getKeyWithEmptyValue() {\r\n        for (String key : expressionName) {\r\n            if (functionMap.get(key + \"(x)\").isEmpty()) {\r\n                return key + \"(x)\";\r\n            }\r\n        }\r\n        String extraExpressionName = expressionName[number] + indexExtra + \"(x)\";\r\n        number++;\r\n        if (number == expressionName.length) {\r\n            indexExtra++;\r\n            number = 0;\r\n        }\r\n        functionMap.put(extraExpressionName, \"\");\r\n        return (extraExpressionName);\r\n    }\r\n\r\n    public BigDecimal evaluate(String expression) {\r\n        for (Map.Entry<String, String> entry : functionMap.entrySet()) {\r\n            String functionName = entry.getKey();\r\n            String functionExpression = entry.getValue();\r\n            expression = expression.replace(functionName, \"(\" + functionExpression + \")\");\r\n        }\r\n\r\n        Expression expr = new Expression(expression);\r\n        return expr.eval();\r\n    }\r\n\r\n    public Map<String, String> getFunctionMap() {\r\n        return functionMap;\r\n    }\r\n\r\n    public boolean containsFunction(String functionName) {\r\n        return functionMap.containsKey(functionName);\r\n    }\r\n\r\n    public String getExpressionValue(String functionName) {\r\n        return functionMap.get(functionName);\r\n    }\r\n\r\n    public void setExpressionValue(String functionName, String expression) {\r\n        if (functionMap.containsKey(functionName)) {\r\n            functionMap.put(functionName, expression);\r\n        } else {\r\n            System.out.println(\"Function \" + functionName + \" does not exist.\");\r\n        }\r\n    }\r\n\r\n    public void printFunctionMap() {\r\n        for (Map.Entry<String, String> entry : functionMap.entrySet()) {\r\n            System.out.println(entry.getKey() + \" = \" + entry.getValue());\r\n        }\r\n    }\r\n//\r\n//    public String transExpressions(String expression) {\r\n//        boolean replaced;\r\n//        do {\r\n//            replaced = false;\r\n//            for (Map.Entry<String, String> entry : functionMap.entrySet()) {\r\n//                String functionName = entry.getKey().split(\"\\\\(\")[0];\r\n//                String functionExpression = entry.getValue();\r\n//                Pattern pattern = Pattern.compile(functionName + \"\\\\((.*?)\\\\)\");\r\n//                Matcher matcher = pattern.matcher(expression);\r\n//\r\n//                while (matcher.find()) {\r\n//                    int openParenIndex = matcher.start() + functionName.length() + 1;\r\n//                    System.out.println(\"openParenIndex: \" + openParenIndex);\r\n//                    int closeParenIndex = findClosingParenthesis(expression, openParenIndex);\r\n//                    System.out.println(\"closeParenIndex: \" + closeParenIndex);\r\n//                    if (closeParenIndex != -1) {\r\n//                        String arg = expression.substring(openParenIndex, closeParenIndex);\r\n//                        System.out.println(\"arg: \" + arg);\r\n//                        String replacedExpression = functionExpression.replace(\"x\", \"(\" + arg + \")\");\r\n//                        System.out.println(\"replacedExpression: \" + replacedExpression);\r\n//                        expression = expression.substring(0, matcher.start()) + \"(\" + replacedExpression + \")\" + expression.substring(closeParenIndex + 1);\r\n//                        System.out.println(\"expression: \" + expression);\r\n//                        replaced = true;\r\n//                        matcher = pattern.matcher(expression); // Reset matcher after replacement\r\n//                    }\r\n//                }\r\n//\r\n//            }\r\n//        } while (replaced);\r\n//        System.out.println(\"change expression: \" + expression);\r\n//        return expression;\r\n//    }\r\n\r\n    public String transExpressions(String expression) {\r\n        boolean replaced;\r\n        do {\r\n            replaced = false;\r\n            for (Map.Entry<String, String> entry : functionMap.entrySet()) {\r\n                String functionName = entry.getKey().split(\"\\\\(\")[0];\r\n                String functionExpression = entry.getValue();\r\n                Pattern pattern = Pattern.compile(functionName + \"\\\\((.*?)\\\\)\");\r\n                Matcher matcher = pattern.matcher(expression);\r\n\r\n                while (matcher.find()) {\r\n                    int openParenIndex = matcher.start() + functionName.length() + 1;\r\n                    System.out.println(\"check log:\" +extractFunctionText(expression,openParenIndex-1));\r\n                    if(!defaultFunctions.contains(extractFunctionText(expression,openParenIndex-1)))\r\n                    {\r\n                        System.out.println(\"openParenIndex: \" + openParenIndex);\r\n                        int closeParenIndex = findClosingParenthesis(expression, openParenIndex);\r\n                        System.out.println(\"closeParenIndex: \" + closeParenIndex);\r\n                        if (closeParenIndex != -1) {\r\n                            String arg = expression.substring(openParenIndex, closeParenIndex);\r\n                            System.out.println(\"arg: \" + arg);\r\n                            String replacedExpression = functionExpression.replace(\"x\", \"(\" + arg + \")\");\r\n                            System.out.println(\"replacedExpression: \" + replacedExpression);\r\n                            expression = expression.substring(0, matcher.start()) + \"(\" + replacedExpression + \")\" + expression.substring(closeParenIndex + 1);\r\n                            System.out.println(\"expression: \" + expression);\r\n                            replaced = true;\r\n                            matcher = pattern.matcher(expression); // Reset matcher after replacement\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            }\r\n        } while (replaced);\r\n        System.out.println(\"change expression: \" + expression);\r\n        return expression;\r\n    }\r\n\r\n    private int findClosingParenthesis(String expression, int startIndex) {\r\n        int openParentheses = 1;\r\n        for (int i = startIndex; i < expression.length(); i++) {\r\n            if (expression.charAt(i) == '(') {\r\n                openParentheses++;\r\n            } else if (expression.charAt(i) == ')') {\r\n                openParentheses--;\r\n                if (openParentheses == 0) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return -1; // No matching closing parenthesis found\r\n    }\r\n\r\n    public String extractFunctionText(String expression, int openParenIndex) {\r\n        StringBuilder functionTextBuilder = new StringBuilder();\r\n        int index = openParenIndex - 1;\r\n\r\n        // Lùi về phía trước cho đến khi gặp một toán tử hoặc ký tự không hợp lệ\r\n        while (index >= 0 && Character.isLetter(expression.charAt(index))) {\r\n            functionTextBuilder.insert(0, expression.charAt(index));\r\n            index--;\r\n        }\r\n\r\n        return functionTextBuilder.toString();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/main/doanjava2/graphList/GraphExpression.java b/src/main/java/main/doanjava2/graphList/GraphExpression.java
--- a/src/main/java/main/doanjava2/graphList/GraphExpression.java	(revision 2ac7374eb46a90db6a05a4dcb3eb939d62f60ffe)
+++ b/src/main/java/main/doanjava2/graphList/GraphExpression.java	(date 1717433494287)
@@ -160,7 +160,7 @@
                             expression = expression.substring(0, matcher.start()) + "(" + replacedExpression + ")" + expression.substring(closeParenIndex + 1);
                             System.out.println("expression: " + expression);
                             replaced = true;
-                            matcher = pattern.matcher(expression); // Reset matcher after replacement
+                            matcher = pattern.matcher(expression);
                         }
                     }
 
@@ -185,14 +185,14 @@
                 }
             }
         }
-        return -1; // No matching closing parenthesis found
+        return -1;
     }
 
     public String extractFunctionText(String expression, int openParenIndex) {
         StringBuilder functionTextBuilder = new StringBuilder();
         int index = openParenIndex - 1;
 
-        // Lùi về phía trước cho đến khi gặp một toán tử hoặc ký tự không hợp lệ
+
         while (index >= 0 && Character.isLetter(expression.charAt(index))) {
             functionTextBuilder.insert(0, expression.charAt(index));
             index--;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7c0c8e8f-6c6a-46f7-8269-c472333fba20\" name=\"Changes\" comment=\"finish welcome-screen\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/fxml/GraphList/GraphListUI.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/fxml/GraphList/GraphListUI.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;thinhleduc387&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/Boygioi15/DoAnJava2.git&quot;,\r\n    &quot;accountId&quot;: &quot;efc580e4-ca15-41ef-ae3c-024046440c6f&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2gXl1a74FGJw4FV3SAuMc2TPEX1\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/thinh/OneDrive/Máy tính/DoAnJava2/src/main/resources&quot;,\r\n    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\thinh\\OneDrive\\Máy tính\\DoAnJava2\\src\\main\\resources\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\Dialog\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\TopNavBar\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\InputKeyboard\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\GraphCanvas\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\css\\Recent\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\fxml\\FilePanel\" />\r\n      <recent name=\"C:\\Users\\boygioi15\\IdeaProjects\\DoAnJava2\\src\\main\\resources\\fxml\\GraphList\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"main.doanjava2.filePanel\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"main.doanjava2.Main\" />\r\n      <module name=\"DoAnJava2\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"main.doanjava2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7c0c8e8f-6c6a-46f7-8269-c472333fba20\" name=\"Changes\" comment=\"\" />\r\n      <created>1715851590364</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715851590364</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"finish\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716889896553</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716889896553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"fix remove empty graphData\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716890202251</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716890202251</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fix\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716899596345</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716899596345</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"finish\" />\r\n    <MESSAGE value=\"fix remove empty graphData\" />\r\n    <MESSAGE value=\"fix\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2ac7374eb46a90db6a05a4dcb3eb939d62f60ffe)
+++ b/.idea/workspace.xml	(date 1717433556221)
@@ -4,9 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7c0c8e8f-6c6a-46f7-8269-c472333fba20" name="Changes" comment="finish welcome-screen">
+    <list default="true" id="7c0c8e8f-6c6a-46f7-8269-c472333fba20" name="Changes" comment="xong">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/fxml/GraphList/GraphListUI.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/fxml/GraphList/GraphListUI.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/main/doanjava2/graphList/GraphExpression.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/main/doanjava2/graphList/GraphExpression.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -25,7 +25,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="handle-expression" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -140,7 +140,15 @@
       <option name="project" value="LOCAL" />
       <updated>1716899596345</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="xong">
+      <option name="closed" value="true" />
+      <created>1717433319785</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1717433319786</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -158,6 +166,7 @@
     <MESSAGE value="finish" />
     <MESSAGE value="fix remove empty graphData" />
     <MESSAGE value="fix" />
-    <option name="LAST_COMMIT_MESSAGE" value="fix" />
+    <MESSAGE value="xong" />
+    <option name="LAST_COMMIT_MESSAGE" value="xong" />
   </component>
 </project>
\ No newline at end of file
